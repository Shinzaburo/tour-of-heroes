{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../hero.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction HeroSearchComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const hero_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/detail/\", hero_r3.id, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", hero_r3.name, \" \");\n  }\n}\nexport let HeroSearchComponent = /*#__PURE__*/(() => {\n  class HeroSearchComponent {\n    heroService;\n    heroes$;\n    searchTerms = new Subject();\n    constructor(heroService) {\n      this.heroService = heroService;\n    }\n    // 検索語をobservableストリームにpushする\n    search(term) {\n      this.searchTerms.next(term);\n    }\n    ngOnInit() {\n      this.heroes$ = this.searchTerms.pipe(\n      // 各キーストロークの後、検索前に300ms待つ\n      debounceTime(300),\n      // 直前の検索語と同じ場合は無視する\n      distinctUntilChanged(),\n      // 検索語が変わる度に、新しい検索observableにスイッチする\n      switchMap(term => this.heroService.searchHeroes(term)));\n    }\n    static ɵfac = function HeroSearchComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HeroSearchComponent)(i0.ɵɵdirectiveInject(i1.HeroService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HeroSearchComponent,\n      selectors: [[\"app-hero-search\"]],\n      decls: 10,\n      vars: 3,\n      consts: [[\"searchBox\", \"\"], [\"id\", \"search-component\"], [\"id\", \"hero-search\"], [\"for\", \"search-box\"], [\"id\", \"search-box\", 3, \"input\"], [1, \"search-result\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n      template: function HeroSearchComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h4\")(3, \"label\", 3);\n          i0.ɵɵtext(4, \"Hero Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"input\", 4, 0);\n          i0.ɵɵlistener(\"input\", function HeroSearchComponent_Template_input_input_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const searchBox_r2 = i0.ɵɵreference(6);\n            return i0.ɵɵresetView(ctx.search(searchBox_r2.value));\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"ul\", 5);\n          i0.ɵɵtemplate(8, HeroSearchComponent_li_8_Template, 3, 3, \"li\", 6);\n          i0.ɵɵpipe(9, \"async\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 1, ctx.heroes$));\n        }\n      },\n      dependencies: [i2.NgForOf, i3.RouterLink, i2.AsyncPipe]\n    });\n  }\n  return HeroSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}